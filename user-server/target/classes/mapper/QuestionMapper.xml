<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boot.wx.persistence.QuestionMapper">
    <!-- 获取某个课程下所有的题目 -->
    <select id="findQuestionByType" parameterType="String" resultType="QuestionEntity">
        select t1.id, t2.name questionType, t1.question_content questionContent, t1.selects,
        <!--case t1.select_type when 0 then '单项选择题' when 1 then '多项选择题' when 2 then '简答题' end selectType,-->
        t1.select_type selectType,
        t1.sorted, t1.create_time createTime, t1.question_comment questionComment,
        (case when t3.id is null then 'false' else 'true' end) collectStatus
        from question_info t1
        left join question_type t2 on t1.question_type = t2.id
        left join question_collected t3 on t1.id = t3.question_id and t3.user_id = #{userId}
        where t1.deleted = 0 and t2.name = #{questionType}
    </select>

    <!-- 获取某个课程下所有已经收藏的题目 -->
    <select id="findByTypeAndCollect" resultType="QuestionEntity">
        select t2.id, t3.name questionType, t2.question_content questionContent, t2.selects,
    <!--case t2.select_type when 0 then '单项选择题' when 1 then '多项选择题' when 2 then '简答题' end selectType,-->
            t2.select_type selectType,
            t2.sorted, t2.create_time createTime, t2.question_comment questionComment,
            1 collectStatus
            from question_collected t1
            left join question_info t2 on t1.question_id = t2.id
            left join question_type t3 on t2.question_type = t3.id
            where t1.user_id = #{userId}
        </select>

        <!-- 根据题目id查到题目的答案和解析 -->
    <select id="findAnswerById" resultType="QuestionEntity">
        select t1.id, t1.question_resolve questionResolve, t1.correct_select correctSelect,
        t2.name questionType, t1.question_content questionContent, t1.selects,
        t1.sorted, t1.create_time createTime, t1.question_comment questionComment,
        (case  when t3.id is null then 'false' else 'true' end) collectStatus,
    <!--case select_type when 0 then '单项选择题' when 1 then '多项选择题' when 2 then '简答题' end selectType-->
            select_type selectType
            from question_info t1
            left join question_type t2 on t1.question_type = t2.id
            left join question_collected t3 on t1.id = t3.question_id
            <if test="userId != null and userId != ''">
                and t3.user_id = #{userId}
            </if>
            where t1.id in (${questionId})
        </select>

        <!-- 收藏 或 取消收藏 -->
    <select id="collect">
        <if test="option == 'delete'">
            delete from question_collected where user_id = #{userId} and question_id = #{questionId}
        </if>
        <if test="option == 'collect'">
            insert into question_collected (user_id, question_id) values (#{userId}, #{questionId})
        </if>
    </select>
    <!-- 查询收藏状态 -->
    <select id="findCollectStatus" resultType="Integer">
        select count(id) from question_collected where user_id = #{userId} and question_id = #{questionId}
    </select>

    <!-- 查询所有的错题id，用于比较答错的题，从而过滤掉已经存在于错题表的题目，避免重复添加 -->
    <select id="findWrongQuestionList" resultType="Integer">
        select question_id from wrong_question_info where user_id = #{userId}
    </select>

    <!-- 添加错题记录 -->
    <insert id="addWrongQuestion" parameterType="QuestionEntity">
        insert into wrong_question_info (user_id, question_id, wrong_selected, create_time)
        VALUES
        <foreach collection="list" item="entity" separator="," >
            (
              #{userId},
              #{entity.id},
              #{entity.commitSelect},
              now()
            )
        </foreach>
    </insert>

    <!-- 查询错题记录 -->
    <select id="wrongList" resultType="QuestionEntity">
        select t1.user_id userId, t1.create_time wrongTime, t1.wrong_selected wrongSelect,
        t2.id, t3.name questionType, t2.question_content questionContent, t2.selects,
<!--case t2.select_type when 0 then '单项选择题' when 1 then '多项选择题' when 2 then '简答题' end selectType,-->
        t2.select_type selectType,
        t2.sorted, t2.create_time createTime, t2.question_comment questionComment, t2.question_resolve questionResolve,
        t2.correct_select correctSelect,
        (case  when t4.id is null then 'false' else 'true' end) collectStatus
        from wrong_question_info t1
        left join question_info t2 on t1.question_id = t2.id
        left join question_type t3 on t2.question_type = t3.id
        left join question_collected t4 on t2.id = t4.question_id and t4.user_id = #{userId}
        where t1.user_id = #{userId}
    </select>

    <delete id="removeWrongQuestion">
        delete from wrong_question_info where user_id = #{userId} and question_id in (${questionIds})
    </delete>

    <select id="files" resultType="boot.wx.entity.QuestionFiles">
        select t1.id, t1.name, t2.name questiontype, t2.id questionTypeId from question_file t1
        left join question_type t2 on t1.question_type_id = t2.id and t2.deleted = 0
        where t1.deleted = 0 and t2.name = #{questionType}
    </select>

    <select id="searchQuestion" resultType="boot.wx.entity.QuestionEntity">
        select t1.id, t1.correct_select correctSelect,  t1.question_content questionContent, t1.question_resolve questionResolve, t2.name questionType,
        (case  when t3.id is null then 'false' else 'true' end) collectStatus
        from question_info t1
        left join question_type t2 on t1.question_type = t2.id
        left join question_collected t3 on t1.id = t3.question_id and t3.user_id = #{userId}
        where t1.question_content like concat('%',concat(#{questionContent}, '%')) and t1.deleted = 0
    </select>

    <select id="course" resultType="boot.wx.entity.Course">
        select t1.id, t2.name questiontype, t1.question_type questionTypeId, t1.c_title, t1.c_slogan, t1.c_content, t1.c_list, t1.c_img from course t1
        left join question_type t2 on t1.question_type = t2.id
        where t1.deleted = 0 and t2.deleted = 0
        <if test="questionType != null and question != ''">
            and t2.name = #{questionType}
        </if>
    </select>

    <select id="guide" resultType="boot.wx.entity.Guide">
        select t1.id, t2.name questiontype, t1.question_type questionTypeId, t1.c_title, t1.c_slogan, t1.content, t1.c_img from guide t1
        left join question_type t2 on t1.question_type = t2.id
        where t1.deleted = 0 and t2.deleted = 0
        <if test="questionType != null and question != ''">
            and t2.name = #{questionType}
        </if>
    </select>
</mapper>