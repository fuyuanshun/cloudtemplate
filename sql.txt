create database if not exists wx_question;
use wx_question;
/**课程类型表 start*/
create table question_type(
	id int primary key auto_increment comment '主键id',
	name varchar(50) not null default '' comment '课程类型名称',
	create_time datetime comment '创建时间',
	deleted int not null default 0 comment '是否逻辑删除，0表示未删除，1表示已删除'
);
insert into question_type (name, create_time) values ('C语言', now());
insert into question_type (name, create_time) values ('数据结构', now());
insert into question_type (name, create_time) values ('组成原理', now());
insert into question_type (name, create_time) values ('计算机网络', now());
insert into question_type (name, create_time) values ('操作系统', now());
# select * from question_type
/**课程类型表 end*/


/**题库表 start*/
create table question_info(
	id int primary key auto_increment comment '主键id',
	question_type int not null comment '所属的课程，课程类型表的外键',
	question_content varchar(1000) not null default '' comment '题干',
	selects varchar(500) not null default '' comment '选项',
	correct_select varchar(20) not null default '' comment '正确选项/正确答案',
	select_type int not null default 0 comment '0表示单项选择，1表示多项选择, 2表示简答题',
	sorted int not null default 0 comment '排序顺序',
	create_time datetime comment '题目创建时间',
	question_comment varchar(200) not null default '' comment '题目备注',
	question_resolve varchar(500) not null default '' comment  '题目解析',
	deleted int not null default 0 comment '是否逻辑删除，0表示未删除，1表示已删除',
	constraint fk_question_info_question_type foreign key(question_type)
	references question_type(id)
);
insert into question_info (question_type, question_content, selects, correct_select, create_time, select_type, question_comment, question_resolve) values (1, '选A', 'A:aaa;;;B:bbb;;;C:ccc;;;D:ddd', 'A', now(), 0, '111', '因为所以科学道理');
# select * from question_info
# drop table question_info
/**题库表 end*/


/**收藏的题目表*/
create table question_collected(
	id int primary key auto_increment comment '主键id',
	user_id varchar(50) not null default '' comment '用户id',
	question_id int not null comment '题目id，题库表外键',
	constraint fk_question_collected_question_info foreign key(question_id)
	references question_info(id)
);
insert into question_collected (user_id, question_id) values ('2233', 1);
# select * from question_collected
# drop table question_collected
/**收藏的题目表*/


/**错题表 start*/
create table wrong_question_info(
	id int primary key auto_increment comment '主键id',
	user_id varchar(50) not null default '' comment '用户id',
	question_id int not null comment '题目id，题库表外键',
	wrong_selected varchar(20) not null default '' comment '选择的错误选项',
	constraint fk_wrong_question_info_question_info foreign key(question_id)
	references question_info(id)
);
insert into wrong_question_info (user_id, question_id, wrong_selected) values
('2233', 1, 'B');
# select * from wrong_question_info
# select  * from wrong_question_info t1 left join question_info t2 on t1.question_id = t2.id
# drop table wrong_question_info
/**错题表 end*/

/**答题记录表 start*/
create table reply_question_info(
	id int primary key auto_increment comment '主键id',
	user_id varchar(50) not null default '' comment '用户id',
	question_id int not null comment '题目id，题库表外键',
	selected varchar(20) not null default '' comment '选择的选项',
	constraint fk_reply_question_info_question_info foreign key(question_id)
	references question_info(id)
);
insert into reply_question_info (user_id, question_id, selected) values
('2233', 1, 'B');
# select * from reply_question_info
# drop table reply_question_info
/**答题记录表 end*/

alter table wrong_question_info add create_time datetime;

/**文件夹表 start*/
create table question_file(
	id int primary key auto_increment,
	name varchar(50) not null default '' comment '文件夹名称',
	question_type_id int comment '课程类型外键',
	create_time datetime,
	deleted int default 0,
	constraint fk_question_file_question_type foreign key(question_type_id) references question_type(id)
);
insert into question_file (name, question_type_id, deleted) values('test1', 1, 0);
/**文件夹表 end*/

create table course(
	id int primary key auto_increment,
	question_type int,
	c_title varchar(200) default '',
	c_slogan varchar(200) default '',
	c_content varchar(500) default '',
	c_list varchar(999) default '',
	c_img varchar(999) default '',
	deleted int default 0,
	constraint fk_course_question_type foreign key(question_type) references question_type(id)
);

create table guide(
	id int primary key auto_increment,
	question_type int,
	c_title varchar(200) default '',
	c_slogan varchar(200) default '',
	content varchar(500) default '',
	c_img varchar(999) default '',
	deleted int default 0,
	constraint fk_guide_question_type foreign key(question_type) references question_type(id)
);